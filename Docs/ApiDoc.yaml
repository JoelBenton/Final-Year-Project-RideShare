openapi: 3.0.0
info:
  title: Authentication API
  description: API for user authentication, token generation, and user management.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server
paths:
  /signup:
    post:
      summary: Register a new user
      description: Creates a new user with email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: "password123"
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered
        '400':
          description: Bad Request - Missing email or password, or email already registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email already registered
        '500':
          description: Server error
  /login:
    post:
      summary: Login a user
      description: Logs a user in and returns access and refresh tokens.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: "password123"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  userId:
                    type: string
                    example: "ckub63y230001gjtczfblvo98"
        '400':
          description: Bad request - Invalid email or password
        '500':
          description: Server error
  /logout:
    post:
      summary: Logout user
      description: Logs the user out by removing the refresh token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully
        '500':
          description: Server error
  /refresh:
    post:
      summary: Refresh access token
      description: Generates a new access token using the refresh token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '403':
          description: Forbidden - Invalid or expired refresh token
        '500':
          description: Server error
  /secure-endpoint:
    get:
      summary: A protected route that requires valid access token
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success - Access granted to protected resource
        '401':
          description: Unauthorized - Invalid or missing access token
        '500':
          description: Server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique user ID
          example: ckub63y230001gjtczfblvo98
        email:
          type: string
          description: User's email address
          example: user@example.com
        password:
          type: string
          description: User's hashed password